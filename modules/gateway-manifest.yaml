---
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-namespace   # replace with your variable if needed

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: gateway-namespace  # same as above
data:
  default.conf: |
    server {
      listen 80;
      location / {
        proxy_pass http://backend-service;  # replace with your backend DNS
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-proxy
  namespace: gateway-namespace
  labels:
    app: gateway-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gateway-proxy
  template:
    metadata:
      labels:
        app: gateway-proxy
    spec:
      containers:
        - name: nginx
          image: nginx:1.25
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: gateway-proxy
  namespace: gateway-namespace
spec:
  type: ClusterIP
  selector:
    app: gateway-proxy
  ports:
    - port: 80
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-proxy-ingress
  namespace: gateway-namespace
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing  # or "internal"
    alb.ingress.kubernetes.io/target-type: ip          # or "instance"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gateway-proxy
                port:
                  number: 80