[0m[1mmodule.eks_backend.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.vpc_gateway.data.aws_availability_zones.this: Reading...[0m[0m
[0m[1mmodule.vpc_backend.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.vpc_backend.data.aws_availability_zones.this: Reading...[0m[0m
[0m[1mmodule.vpc_gateway.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.eks_gateway.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.eks_gateway.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks_backend.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.eks_gateway.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.vpc_backend.data.aws_region.current: Read complete after 0s [id=eu-west-2][0m
[0m[1mmodule.eks_gateway.data.aws_region.current: Read complete after 0s [id=eu-west-2][0m
[0m[1mmodule.eks_gateway.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.vpc_gateway.data.aws_region.current: Read complete after 0s [id=eu-west-2][0m
[0m[1mmodule.eks_backend.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.eks_backend.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.eks_backend.data.aws_region.current: Read complete after 0s [id=eu-west-2][0m
[0m[1mmodule.eks_gateway.data.aws_caller_identity.current: Read complete after 0s [id=928470004462][0m
[0m[1mmodule.eks_backend.data.aws_caller_identity.current: Read complete after 0s [id=928470004462][0m
[0m[1mmodule.vpc_backend.data.aws_availability_zones.this: Read complete after 1s [id=eu-west-2][0m
[0m[1mmodule.vpc_gateway.data.aws_availability_zones.this: Read complete after 1s [id=eu-west-2][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.eks_backend.data.tls_certificate.oidc_cert[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "tls_certificate" "oidc_cert" {
      [32m+[0m[0m certificates = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m url          = (known after apply)
    }

[1m  # module.eks_backend.aws_eks_addon.coredns[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "coredns" {
      [32m+[0m[0m addon_name           = "coredns"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "sentinel-eks-backend"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks_backend.aws_eks_addon.kube_proxy[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "kube_proxy" {
      [32m+[0m[0m addon_name           = "kube-proxy"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "sentinel-eks-backend"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks_backend.aws_eks_addon.vpc_cni[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "vpc_cni" {
      [32m+[0m[0m addon_name           = "vpc-cni"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "sentinel-eks-backend"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks_backend.aws_eks_cluster.this[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_cluster" "this" {
      [32m+[0m[0m arn                           = (known after apply)
      [32m+[0m[0m bootstrap_self_managed_addons = true
      [32m+[0m[0m certificate_authority         = (known after apply)
      [32m+[0m[0m cluster_id                    = (known after apply)
      [32m+[0m[0m created_at                    = (known after apply)
      [32m+[0m[0m deletion_protection           = (known after apply)
      [32m+[0m[0m endpoint                      = (known after apply)
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m identity                      = (known after apply)
      [32m+[0m[0m name                          = "sentinel-eks-backend"
      [32m+[0m[0m platform_version              = (known after apply)
      [32m+[0m[0m region                        = "eu-west-2"
      [32m+[0m[0m role_arn                      = (known after apply)
      [32m+[0m[0m status                        = (known after apply)
      [32m+[0m[0m tags                          = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                      = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m version                       = "1.30"

      [32m+[0m[0m access_config (known after apply)

      [32m+[0m[0m kubernetes_network_config (known after apply)

      [32m+[0m[0m upgrade_policy (known after apply)

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m cluster_security_group_id = (known after apply)
          [32m+[0m[0m endpoint_private_access   = true
          [32m+[0m[0m endpoint_public_access    = true
          [32m+[0m[0m public_access_cidrs       = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m subnet_ids                = (known after apply)
          [32m+[0m[0m vpc_id                    = (known after apply)
        }
    }

[1m  # module.eks_backend.aws_eks_node_group.default[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_node_group" "default" {
      [32m+[0m[0m ami_type               = (known after apply)
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m capacity_type          = "ON_DEMAND"
      [32m+[0m[0m cluster_name           = "sentinel-eks-backend"
      [32m+[0m[0m disk_size              = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_types         = [
          [32m+[0m[0m "t3.large",
        ]
      [32m+[0m[0m node_group_name        = "sentinel-eks-backend-ng"
      [32m+[0m[0m node_group_name_prefix = (known after apply)
      [32m+[0m[0m node_role_arn          = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m release_version        = (known after apply)
      [32m+[0m[0m resources              = (known after apply)
      [32m+[0m[0m status                 = (known after apply)
      [32m+[0m[0m subnet_ids             = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m version                = (known after apply)

      [32m+[0m[0m node_repair_config (known after apply)

      [32m+[0m[0m scaling_config {
          [32m+[0m[0m desired_size = 2
          [32m+[0m[0m max_size     = 4
          [32m+[0m[0m min_size     = 2
        }

      [32m+[0m[0m update_config (known after apply)
    }

[1m  # module.eks_backend.aws_iam_openid_connect_provider.this[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_openid_connect_provider" "this" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m client_id_list  = [
          [32m+[0m[0m "sts.amazonaws.com",
        ]
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m tags_all        = (known after apply)
      [32m+[0m[0m thumbprint_list = (known after apply)
      [32m+[0m[0m url             = (known after apply)
    }

[1m  # module.eks_backend.aws_iam_role.cluster[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "cluster" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "eks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "sentinel-eks-backend-cluster-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.eks_backend.aws_iam_role.node[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "node" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "sentinel-eks-backend-node-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.eks_backend.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_AmazonEKSClusterPolicy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      [32m+[0m[0m role       = "sentinel-eks-backend-cluster-role"
    }

[1m  # module.eks_backend.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceController[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_AmazonEKSVPCResourceController" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      [32m+[0m[0m role       = "sentinel-eks-backend-cluster-role"
    }

[1m  # module.eks_backend.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEC2ContainerRegistryReadOnly" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m[0m role       = "sentinel-eks-backend-node-role"
    }

[1m  # module.eks_backend.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEKSWorkerNodePolicy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m[0m role       = "sentinel-eks-backend-node-role"
    }

[1m  # module.eks_backend.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEKS_CNI_Policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m[0m role       = "sentinel-eks-backend-node-role"
    }

[1m  # module.eks_gateway.data.tls_certificate.oidc_cert[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "tls_certificate" "oidc_cert" {
      [32m+[0m[0m certificates = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m url          = (known after apply)
    }

[1m  # module.eks_gateway.aws_eks_addon.coredns[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "coredns" {
      [32m+[0m[0m addon_name           = "coredns"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "sentinel-eks-gateway"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks_gateway.aws_eks_addon.kube_proxy[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "kube_proxy" {
      [32m+[0m[0m addon_name           = "kube-proxy"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "sentinel-eks-gateway"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks_gateway.aws_eks_addon.vpc_cni[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "vpc_cni" {
      [32m+[0m[0m addon_name           = "vpc-cni"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "sentinel-eks-gateway"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks_gateway.aws_eks_cluster.this[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_cluster" "this" {
      [32m+[0m[0m arn                           = (known after apply)
      [32m+[0m[0m bootstrap_self_managed_addons = true
      [32m+[0m[0m certificate_authority         = (known after apply)
      [32m+[0m[0m cluster_id                    = (known after apply)
      [32m+[0m[0m created_at                    = (known after apply)
      [32m+[0m[0m deletion_protection           = (known after apply)
      [32m+[0m[0m endpoint                      = (known after apply)
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m identity                      = (known after apply)
      [32m+[0m[0m name                          = "sentinel-eks-gateway"
      [32m+[0m[0m platform_version              = (known after apply)
      [32m+[0m[0m region                        = "eu-west-2"
      [32m+[0m[0m role_arn                      = (known after apply)
      [32m+[0m[0m status                        = (known after apply)
      [32m+[0m[0m tags                          = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                      = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m version                       = "1.30"

      [32m+[0m[0m access_config (known after apply)

      [32m+[0m[0m kubernetes_network_config (known after apply)

      [32m+[0m[0m upgrade_policy (known after apply)

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m cluster_security_group_id = (known after apply)
          [32m+[0m[0m endpoint_private_access   = true
          [32m+[0m[0m endpoint_public_access    = true
          [32m+[0m[0m public_access_cidrs       = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m subnet_ids                = (known after apply)
          [32m+[0m[0m vpc_id                    = (known after apply)
        }
    }

[1m  # module.eks_gateway.aws_eks_node_group.default[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_node_group" "default" {
      [32m+[0m[0m ami_type               = (known after apply)
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m capacity_type          = "ON_DEMAND"
      [32m+[0m[0m cluster_name           = "sentinel-eks-gateway"
      [32m+[0m[0m disk_size              = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_types         = [
          [32m+[0m[0m "t3.large",
        ]
      [32m+[0m[0m node_group_name        = "sentinel-eks-gateway-ng"
      [32m+[0m[0m node_group_name_prefix = (known after apply)
      [32m+[0m[0m node_role_arn          = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m release_version        = (known after apply)
      [32m+[0m[0m resources              = (known after apply)
      [32m+[0m[0m status                 = (known after apply)
      [32m+[0m[0m subnet_ids             = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m version                = (known after apply)

      [32m+[0m[0m node_repair_config (known after apply)

      [32m+[0m[0m scaling_config {
          [32m+[0m[0m desired_size = 2
          [32m+[0m[0m max_size     = 4
          [32m+[0m[0m min_size     = 2
        }

      [32m+[0m[0m update_config (known after apply)
    }

[1m  # module.eks_gateway.aws_iam_openid_connect_provider.this[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_openid_connect_provider" "this" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m client_id_list  = [
          [32m+[0m[0m "sts.amazonaws.com",
        ]
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m tags_all        = (known after apply)
      [32m+[0m[0m thumbprint_list = (known after apply)
      [32m+[0m[0m url             = (known after apply)
    }

[1m  # module.eks_gateway.aws_iam_role.cluster[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "cluster" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "eks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "sentinel-eks-gateway-cluster-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.eks_gateway.aws_iam_role.node[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "node" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "sentinel-eks-gateway-node-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.eks_gateway.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_AmazonEKSClusterPolicy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      [32m+[0m[0m role       = "sentinel-eks-gateway-cluster-role"
    }

[1m  # module.eks_gateway.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceController[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_AmazonEKSVPCResourceController" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      [32m+[0m[0m role       = "sentinel-eks-gateway-cluster-role"
    }

[1m  # module.eks_gateway.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEC2ContainerRegistryReadOnly" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m[0m role       = "sentinel-eks-gateway-node-role"
    }

[1m  # module.eks_gateway.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEKSWorkerNodePolicy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m[0m role       = "sentinel-eks-gateway-node-role"
    }

[1m  # module.eks_gateway.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEKS_CNI_Policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m[0m role       = "sentinel-eks-gateway-node-role"
    }

[1m  # module.peering.aws_route.acc_to_req[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "acc_to_req" {
      [32m+[0m[0m destination_cidr_block    = "10.10.0.0/16"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m instance_id               = (known after apply)
      [32m+[0m[0m instance_owner_id         = (known after apply)
      [32m+[0m[0m network_interface_id      = (known after apply)
      [32m+[0m[0m origin                    = (known after apply)
      [32m+[0m[0m region                    = "eu-west-2"
      [32m+[0m[0m route_table_id            = (known after apply)
      [32m+[0m[0m state                     = (known after apply)
      [32m+[0m[0m vpc_peering_connection_id = (known after apply)
    }

[1m  # module.peering.aws_route.acc_to_req[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "acc_to_req" {
      [32m+[0m[0m destination_cidr_block    = "10.10.0.0/16"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m instance_id               = (known after apply)
      [32m+[0m[0m instance_owner_id         = (known after apply)
      [32m+[0m[0m network_interface_id      = (known after apply)
      [32m+[0m[0m origin                    = (known after apply)
      [32m+[0m[0m region                    = "eu-west-2"
      [32m+[0m[0m route_table_id            = (known after apply)
      [32m+[0m[0m state                     = (known after apply)
      [32m+[0m[0m vpc_peering_connection_id = (known after apply)
    }

[1m  # module.peering.aws_route.req_to_acc[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "req_to_acc" {
      [32m+[0m[0m destination_cidr_block    = "10.20.0.0/16"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m instance_id               = (known after apply)
      [32m+[0m[0m instance_owner_id         = (known after apply)
      [32m+[0m[0m network_interface_id      = (known after apply)
      [32m+[0m[0m origin                    = (known after apply)
      [32m+[0m[0m region                    = "eu-west-2"
      [32m+[0m[0m route_table_id            = (known after apply)
      [32m+[0m[0m state                     = (known after apply)
      [32m+[0m[0m vpc_peering_connection_id = (known after apply)
    }

[1m  # module.peering.aws_route.req_to_acc[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "req_to_acc" {
      [32m+[0m[0m destination_cidr_block    = "10.20.0.0/16"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m instance_id               = (known after apply)
      [32m+[0m[0m instance_owner_id         = (known after apply)
      [32m+[0m[0m network_interface_id      = (known after apply)
      [32m+[0m[0m origin                    = (known after apply)
      [32m+[0m[0m region                    = "eu-west-2"
      [32m+[0m[0m route_table_id            = (known after apply)
      [32m+[0m[0m state                     = (known after apply)
      [32m+[0m[0m vpc_peering_connection_id = (known after apply)
    }

[1m  # module.peering.aws_vpc_peering_connection.this[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_peering_connection" "this" {
      [32m+[0m[0m accept_status = (known after apply)
      [32m+[0m[0m auto_accept   = true
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m peer_owner_id = (known after apply)
      [32m+[0m[0m peer_region   = (known after apply)
      [32m+[0m[0m peer_vpc_id   = (known after apply)
      [32m+[0m[0m region        = "eu-west-2"
      [32m+[0m[0m tags          = {
          [32m+[0m[0m "Name"    = "sentinel-gw-backend"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all      = {
          [32m+[0m[0m "Name"    = "sentinel-gw-backend"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id        = (known after apply)

      [32m+[0m[0m accepter (known after apply)

      [32m+[0m[0m requester (known after apply)
    }

[1m  # module.vpc_backend.aws_eip.nat["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name"    = "sentinel-backend-nat-eip-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name"    = "sentinel-backend-nat-eip-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_backend.aws_eip.nat["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name"    = "sentinel-backend-nat-eip-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name"    = "sentinel-backend-nat-eip-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_backend.aws_internet_gateway.igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m region   = "eu-west-2"
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name"    = "sentinel-backend-igw"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name"    = "sentinel-backend-igw"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc_backend.aws_nat_gateway.nat["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "eu-west-2"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name"    = "sentinel-backend-nat-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name"    = "sentinel-backend-nat-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_backend.aws_nat_gateway.nat["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "eu-west-2"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name"    = "sentinel-backend-nat-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name"    = "sentinel-backend-nat-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_backend.aws_route.private_nat["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private_nat" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.vpc_backend.aws_route.private_nat["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private_nat" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.vpc_backend.aws_route.public_internet[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "public_internet" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.vpc_backend.aws_route_table.private["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-2"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name"    = "sentinel-backend-private-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"    = "sentinel-backend-private-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_backend.aws_route_table.private["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-2"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name"    = "sentinel-backend-private-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"    = "sentinel-backend-private-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_backend.aws_route_table.public[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-2"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name"    = "sentinel-backend-public"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"    = "sentinel-backend-public"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_backend.aws_route_table_association.public["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-2"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_backend.aws_route_table_association.public["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-2"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_backend.aws_security_group.endpoints[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "endpoints" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Allow VPC internal traffic to interface endpoints"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "10.20.0.0/16",
                ]
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "sentinel-backend-vpce-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-sg"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-sg"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.vpc_backend.aws_subnet.private["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-2"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"    = "sentinel-backend-private-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"    = "sentinel-backend-private-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_backend.aws_subnet.private["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-2"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"    = "sentinel-backend-private-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"    = "sentinel-backend-private-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_backend.aws_subnet.public["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.101.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-2"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"    = "sentinel-backend-public-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"    = "sentinel-backend-public-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_backend.aws_subnet.public["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.102.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-2"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"    = "sentinel-backend-public-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"    = "sentinel-backend-public-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc.this[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.20.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m region                               = "eu-west-2"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"    = "sentinel-backend"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"    = "sentinel-backend"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.gateway["dynamodb"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "gateway" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = (known after apply)
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.dynamodb"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-dynamodb"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-dynamodb"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Gateway"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.gateway["s3"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "gateway" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = (known after apply)
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.s3"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-s3"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-s3"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Gateway"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ec2"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ec2"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ec2"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ec2messages"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ec2messages"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ec2messages"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ecr.api"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ecr.api"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ecr.api"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ecr.dkr"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ecr.dkr"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ecr.dkr"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.kms"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-kms"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-kms"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.logs"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-logs"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-logs"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.secretsmanager"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-secretsmanager"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-secretsmanager"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ssm"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ssm"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ssm"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ssmmessages"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ssmmessages"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-backend-vpce-ssmmessages"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_eip.nat["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-nat-eip-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-nat-eip-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_gateway.aws_eip.nat["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = "vpc"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m region               = "eu-west-2"
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-nat-eip-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-nat-eip-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_gateway.aws_internet_gateway.igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m region   = "eu-west-2"
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-igw"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-igw"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc_gateway.aws_nat_gateway.nat["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "eu-west-2"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-nat-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-nat-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_gateway.aws_nat_gateway.nat["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m region                             = "eu-west-2"
      [32m+[0m[0m secondary_allocation_ids           = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-nat-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-nat-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_gateway.aws_route.private_nat["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private_nat" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.vpc_gateway.aws_route.private_nat["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private_nat" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.vpc_gateway.aws_route.public_internet[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "public_internet" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.vpc_gateway.aws_route_table.private["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-2"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-private-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-private-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_gateway.aws_route_table.private["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-2"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-private-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-private-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_gateway.aws_route_table.public[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m region           = "eu-west-2"
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-public"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-public"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_gateway.aws_route_table_association.public["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-2"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_gateway.aws_route_table_association.public["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m region         = "eu-west-2"
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_gateway.aws_security_group.endpoints[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "endpoints" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Allow VPC internal traffic to interface endpoints"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "10.10.0.0/16",
                ]
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "sentinel-gateway-vpce-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "eu-west-2"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-sg"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-sg"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.vpc_gateway.aws_subnet.private["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.10.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-2"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-private-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-private-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_gateway.aws_subnet.private["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.10.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-2"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-private-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-private-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_gateway.aws_subnet.public["0"][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.10.101.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-2"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-public-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-public-0"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_gateway.aws_subnet.public["1"][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-west-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.10.102.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m region                                         = "eu-west-2"
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-public-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-public-1"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc.this[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.10.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m region                               = "eu-west-2"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"    = "sentinel-gateway"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"    = "sentinel-gateway"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.gateway["s3"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "gateway" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = (known after apply)
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.s3"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-s3"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-s3"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Gateway"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ec2"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ec2"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ec2"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ec2messages"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ec2messages"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ec2messages"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ecr.api"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ecr.api"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ecr.api"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ecr.dkr"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ecr.dkr"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ecr.dkr"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.kms"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-kms"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-kms"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.logs"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-logs"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-logs"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.secretsmanager"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-secretsmanager"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-secretsmanager"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ssm"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ssm"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ssm"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1m  # module.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_endpoint" "interface" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m cidr_blocks           = (known after apply)
      [32m+[0m[0m dns_entry             = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m ip_address_type       = (known after apply)
      [32m+[0m[0m network_interface_ids = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m policy                = (known after apply)
      [32m+[0m[0m prefix_list_id        = (known after apply)
      [32m+[0m[0m private_dns_enabled   = true
      [32m+[0m[0m region                = "eu-west-2"
      [32m+[0m[0m requester_managed     = (known after apply)
      [32m+[0m[0m route_table_ids       = (known after apply)
      [32m+[0m[0m security_group_ids    = (known after apply)
      [32m+[0m[0m service_name          = "com.amazonaws.eu-west-2.ssmmessages"
      [32m+[0m[0m service_region        = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m subnet_ids            = (known after apply)
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ssmmessages"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "sentinel-gateway-vpce-ssmmessages"
          [32m+[0m[0m "Owner"   = "Platform"
          [32m+[0m[0m "Project" = "Sentinel"
        }
      [32m+[0m[0m vpc_endpoint_type     = "Interface"
      [32m+[0m[0m vpc_id                = (known after apply)

      [32m+[0m[0m dns_options (known after apply)

      [32m+[0m[0m subnet_configuration (known after apply)
    }

[1mPlan:[0m 90 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m backend_private_subnets  = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m backend_vpc_id           = (known after apply)
  [32m+[0m[0m eks_backend_cluster_name = "sentinel-eks-backend"
  [32m+[0m[0m eks_gateway_cluster_name = "sentinel-eks-gateway"
  [32m+[0m[0m gateway_private_subnets  = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m gateway_vpc_id           = (known after apply)
  [32m+[0m[0m vpc_peering_id           = (known after apply)
[0m[1mmodule.eks_backend.aws_iam_role.cluster: Creating...[0m[0m
[0m[1mmodule.eks_backend.aws_iam_role.node: Creating...[0m[0m
[0m[1mmodule.eks_gateway.aws_iam_role.node: Creating...[0m[0m
[0m[1mmodule.eks_gateway.aws_iam_role.cluster: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc.this: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc.this: Creating...[0m[0m
[0m[1mmodule.eks_gateway.aws_iam_role.cluster: Creation complete after 0s [id=sentinel-eks-gateway-cluster-role][0m
[0m[1mmodule.eks_backend.aws_iam_role.cluster: Creation complete after 0s [id=sentinel-eks-backend-cluster-role][0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceController: Creating...[0m[0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Creating...[0m[0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Creating...[0m[0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceController: Creating...[0m[0m
[0m[1mmodule.eks_backend.aws_iam_role.node: Creation complete after 0s [id=sentinel-eks-backend-node-role][0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Creating...[0m[0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Creating...[0m[0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Creating...[0m[0m
[0m[1mmodule.eks_gateway.aws_iam_role.node: Creation complete after 0s [id=sentinel-eks-gateway-node-role][0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Creating...[0m[0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceController: Creation complete after 0s [id=sentinel-eks-backend-cluster-role/arn:aws:iam::aws:policy/AmazonEKSVPCResourceController][0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Creating...[0m[0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceController: Creation complete after 0s [id=sentinel-eks-gateway-cluster-role/arn:aws:iam::aws:policy/AmazonEKSVPCResourceController][0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Creating...[0m[0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Creation complete after 0s [id=sentinel-eks-gateway-cluster-role/arn:aws:iam::aws:policy/AmazonEKSClusterPolicy][0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Creation complete after 0s [id=sentinel-eks-backend-node-role/arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly][0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Creation complete after 0s [id=sentinel-eks-backend-node-role/arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy][0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Creation complete after 0s [id=sentinel-eks-gateway-node-role/arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy][0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Creation complete after 0s [id=sentinel-eks-backend-cluster-role/arn:aws:iam::aws:policy/AmazonEKSClusterPolicy][0m
[0m[1mmodule.eks_backend.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Creation complete after 0s [id=sentinel-eks-backend-node-role/arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy][0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Creation complete after 0s [id=sentinel-eks-gateway-node-role/arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly][0m
[0m[1mmodule.eks_gateway.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Creation complete after 0s [id=sentinel-eks-gateway-node-role/arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy][0m
[0m[1mmodule.vpc_backend.aws_vpc.this: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc.this: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc.this: Creation complete after 12s [id=vpc-0e73187e036bf9655][0m
[0m[1mmodule.vpc_backend.aws_subnet.private["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_route_table.public: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_security_group.endpoints: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_subnet.private["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_subnet.public["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_subnet.public["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_internet_gateway.igw: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc.this: Creation complete after 13s [id=vpc-05e1c5aae65550af5][0m
[0m[1mmodule.vpc_gateway.aws_internet_gateway.igw: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_route_table.public: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_subnet.public["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_route_table.public: Creation complete after 0s [id=rtb-0bf2bec1a113bb86b][0m
[0m[1mmodule.vpc_gateway.aws_subnet.private["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_subnet.public["0"]: Creation complete after 0s [id=subnet-0746eceb1f669e874][0m
[0m[1mmodule.vpc_gateway.aws_subnet.private["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_internet_gateway.igw: Creation complete after 0s [id=igw-0e25629d2b64cd2e3][0m
[0m[1mmodule.vpc_gateway.aws_security_group.endpoints: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_internet_gateway.igw: Creation complete after 0s [id=igw-0ed96b1e0bf9184f3][0m
[0m[1mmodule.vpc_gateway.aws_subnet.public["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_subnet.private["0"]: Creation complete after 0s [id=subnet-01fa524c22ab13a68][0m
[0m[1mmodule.vpc_backend.aws_route.public_internet: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_subnet.public["1"]: Creation complete after 1s [id=subnet-028090fed6e168044][0m
[0m[1mmodule.vpc_backend.aws_subnet.private["1"]: Creation complete after 1s [id=subnet-09d4b885b595e7714][0m
[0m[1mmodule.vpc_backend.aws_eip.nat["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_eip.nat["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_route_table.public: Creation complete after 1s [id=rtb-04c516ec2ec1c8c34][0m
[0m[1mmodule.vpc_backend.aws_route_table_association.public["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_subnet.private["1"]: Creation complete after 1s [id=subnet-053c565e662c183a3][0m
[0m[1mmodule.vpc_backend.aws_route_table_association.public["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_subnet.public["0"]: Creation complete after 1s [id=subnet-0923cbd1423ca0892][0m
[0m[1mmodule.vpc_backend.aws_route_table_association.public["0"]: Creation complete after 0s [id=rtbassoc-01ada6c07ec460ef8][0m
[0m[1mmodule.peering.aws_vpc_peering_connection.this: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_subnet.public["1"]: Creation complete after 1s [id=subnet-0a95240a0aef547ab][0m
[0m[1mmodule.vpc_backend.aws_route_table.private["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_subnet.private["0"]: Creation complete after 1s [id=subnet-0891b73210a1ec83b][0m
[0m[1mmodule.vpc_backend.aws_route_table.private["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_route.public_internet: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_route.public_internet: Creation complete after 0s [id=r-rtb-0bf2bec1a113bb86b1080289494][0m
[0m[1mmodule.vpc_gateway.aws_route_table_association.public["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_eip.nat["0"]: Creation complete after 0s [id=eipalloc-0068249d5d9d9c839][0m
[0m[1mmodule.vpc_gateway.aws_route_table_association.public["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_eip.nat["1"]: Creation complete after 0s [id=eipalloc-05e4babdba4109464][0m
[0m[1mmodule.vpc_gateway.aws_eip.nat["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_route_table_association.public["1"]: Creation complete after 1s [id=rtbassoc-0844b1330ccd33e81][0m
[0m[1mmodule.vpc_gateway.aws_eip.nat["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_route_table_association.public["1"]: Creation complete after 1s [id=rtbassoc-036bf6aa4b79cf460][0m
[0m[1mmodule.vpc_gateway.aws_route_table_association.public["0"]: Creation complete after 1s [id=rtbassoc-02d3cf19cd9dd3a42][0m
[0m[1mmodule.vpc_gateway.aws_route_table.private["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_route_table.private["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_route_table.private["0"]: Creation complete after 1s [id=rtb-0388f6a2788302a06][0m
[0m[1mmodule.vpc_backend.aws_route_table.private["1"]: Creation complete after 1s [id=rtb-0394dde6b67b8a623][0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Creating...[0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_route.public_internet: Creation complete after 1s [id=r-rtb-04c516ec2ec1c8c341080289494][0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_eip.nat["0"]: Creation complete after 1s [id=eipalloc-057c08308ea9ab371][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.gateway["dynamodb"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_route_table.private["0"]: Creation complete after 1s [id=rtb-0a8b368fec6f19cff][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.gateway["s3"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_route_table.private["1"]: Creation complete after 1s [id=rtb-0a09d40882fde325c][0m
[0m[1mmodule.vpc_gateway.aws_eip.nat["1"]: Creation complete after 1s [id=eipalloc-0929538862c30ef91][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.gateway["s3"]: Creating...[0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_security_group.endpoints: Creation complete after 3s [id=sg-0cad081e0070c958b][0m
[0m[1mmodule.peering.aws_vpc_peering_connection.this: Creation complete after 2s [id=pcx-0efa03c28e2995b78][0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_security_group.endpoints: Creation complete after 3s [id=sg-0ed0d852c082fcb0d][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.gateway["dynamodb"]: Creation complete after 6s [id=vpce-00f2d897cd933d39d][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.gateway["s3"]: Creation complete after 5s [id=vpce-0f01500660e280e87][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.gateway["s3"]: Creation complete after 6s [id=vpce-09877c1d5a5419d09][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Creation complete after 1m3s [id=vpce-061822d83aecfb9b8][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [01m11s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Creation complete after 1m15s [id=vpce-05ead564aa501e5ce][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["0"]: Creation complete after 1m25s [id=nat-001e09396744439b5][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_nat_gateway.nat["1"]: Creation complete after 1m25s [id=nat-0818c100a8eec686e][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [01m21s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["0"]: Creation complete after 1m35s [id=nat-081dae7c4b95f92cb][0m
[0m[1mmodule.peering.aws_route.req_to_acc[1]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [01m31s elapsed][0m[0m
[0m[1mmodule.peering.aws_route.req_to_acc[1]: Creation complete after 1s [id=r-rtb-0a09d40882fde325c662290444][0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Creation complete after 1m31s [id=vpce-0cbdd8e726d8b9200][0m
[0m[1mmodule.peering.aws_route.req_to_acc[0]: Creating...[0m[0m
[0m[1mmodule.peering.aws_route.req_to_acc[0]: Creation complete after 1s [id=r-rtb-0a8b368fec6f19cff662290444][0m
[0m[1mmodule.peering.aws_route.acc_to_req[0]: Creating...[0m[0m
[0m[1mmodule.peering.aws_route.acc_to_req[0]: Creation complete after 1s [id=r-rtb-0388f6a2788302a06519371977][0m
[0m[1mmodule.peering.aws_route.acc_to_req[1]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Creation complete after 1m33s [id=vpce-09e3e53b5931e808b][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Creating...[0m[0m
[0m[1mmodule.peering.aws_route.acc_to_req[1]: Creation complete after 1s [id=r-rtb-0394dde6b67b8a623519371977][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Creating...[0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Creation complete after 42s [id=vpce-0259b7dbb77877da9][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_nat_gateway.nat["1"]: Creation complete after 2m5s [id=nat-0f45526023431a9b6][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Creation complete after 42s [id=vpce-02944b9c8d6ad8bfa][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Creation complete after 32s [id=vpce-04e1c6c069f98f671][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [02m10s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [02m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Creation complete after 32s [id=vpce-022387034e78e599c][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2"]: Creation complete after 52s [id=vpce-0ca2de73b10eb0882][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_backend.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Creation complete after 52s [id=vpce-0de73dd1e16fb648a][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [02m20s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [02m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ec2messages"]: Creation complete after 42s [id=vpce-02fb4994f3dd1d5cd][0m
[0m[1mmodule.vpc_backend.aws_route.private_nat["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_route.private_nat["0"]: Creation complete after 1s [id=r-rtb-0388f6a2788302a061080289494][0m
[0m[1mmodule.vpc_backend.aws_route.private_nat["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_backend.aws_route.private_nat["1"]: Creation complete after 0s [id=r-rtb-0394dde6b67b8a6231080289494][0m
[0m[1mmodule.vpc_gateway.aws_route.private_nat["0"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_route.private_nat["0"]: Creation complete after 1s [id=r-rtb-0a8b368fec6f19cff1080289494][0m
[0m[1mmodule.vpc_gateway.aws_route.private_nat["1"]: Creating...[0m[0m
[0m[1mmodule.vpc_gateway.aws_route.private_nat["1"]: Creation complete after 1s [id=r-rtb-0a09d40882fde325c1080289494][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssm"]: Creation complete after 43s [id=vpce-072f97515cec66da6][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [02m30s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [02m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [02m40s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [02m40s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.dkr"]: Creation complete after 32s [id=vpce-06eb2454fc6953c7c][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ssmmessages"]: Creation complete after 32s [id=vpce-07c69c15800f5e5a8][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.ecr.api"]: Creation complete after 43s [id=vpce-0c63723e5df47e553][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.secretsmanager"]: Creation complete after 42s [id=vpce-073e03eff1815e720][0m
[0m[1mmodule.eks_backend.aws_eks_cluster.this: Still creating... [02m50s elapsed][0m[0m
[0m[1mmodule.eks_gateway.aws_eks_cluster.this: Still creating... [02m50s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.logs"]: Creation complete after 43s [id=vpce-05cb5635691b9400b][0m
[0m[1mmodule.vpc_gateway.aws_vpc_endpoint.interface["com.amazonaws.eu-west-2.kms"]: Still creating... [00m40s elapsed][0m[0m
