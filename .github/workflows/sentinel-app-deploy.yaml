name: Terraform EKS Deploy + Multi-Cluster App Deploy

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    # ---- Create IAM Policy for ALB Controller ----
    - name: Create LoadBalancerControllerPolicy
      run: |
        set +e
        aws iam create-policy \
          --policy-name  aashish-eks-LoadBalancerControllerPolicy \
          --policy-document file://iam-policy.json || echo "Policy may already exist"
        set -e

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init 

    # ---- Networking Plan & Apply ----
    - name: Terraform Plan (Networking)
      run: |
       terraform plan \
             -var-file=envs/dev/terraform.tfvars \
             -target=module.vpc_backend \
             -target=module.vpc_gateway \
             -target=module.peering

    - name: Terraform Apply (Networking)
      run: |
        terraform apply \
             -var-file=envs/dev/terraform.tfvars \
             -target=module.vpc_backend \
             -target=module.vpc_gateway \
             -target=module.peering \
             -auto-approve

    # ---- EKS Plan & Apply ----
    - name: Terraform Plan (EKS)
      run: |
        terraform plan \
             -var-file=envs/dev/terraform.tfvars \
             -target=module.eks_backend \
             -target=module.eks_gateway

    - name: Terraform Apply (EKS)
      run: |
       terraform apply \
             -var-file=envs/dev/terraform.tfvars \
             -target=module.eks_backend \
             -target=module.eks_gateway \
             -auto-approve 

    # ---- ALB Controller Plan & Apply ----
    - name: Terraform Plan (ALB Controllers)
      run: |
        terraform plan \
             -var-file=envs/dev/terraform.tfvars \
             -target=module.alb_controller_backend \
             -target=module.alb_controller_gateway

    - name: Terraform Apply (ALB Controllers)
      run: |
        terraform apply \
             -var-file=envs/dev/terraform.tfvars \
             -target=module.alb_controller_backend \
             -target=module.alb_controller_gateway \
             -auto-approve
    
    - name: Wait for ALB Controller to be ready
      run: |
        echo "⏳ Waiting 120 seconds for ALB controller pods..."
        sleep 120

    - name: Terraform Plan (Backend App)
      run: |
        terraform plan \
             -var-file=envs/dev/terraform.tfvars \
             -target=module.backend_app
    
    - name: Terraform Apply (Backend App)
      run: |
        terraform apply \
             -var-file=envs/dev/terraform.tfvars \
             -target=module.backend_app \
             -auto-approve

    - name: Wait for Backend DNS to be ready
      run: |
        echo "⏳ Waiting 120 seconds for ALB controller pods..."
        sleep 120
    
    - name: Terraform Plan (Gateway App)
      run: |
        terraform plan
             -var-file=envs/dev/terraform.tfvars \
             -target=module.gateway_app
    - name: Terraform Apply (Gateway App)
      run: |
        terraform apply \
             -var-file=envs/dev/terraform.tfvars \
             -target=module.gateway_app \
             -auto-approve



